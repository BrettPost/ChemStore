@page
@model ChemStoreWebApp.Pages.SearchModel

@{
    ViewData["Title"] = "Search";
}
<head>
    <link rel="stylesheet" href="~\wwwroot\css\searchItemLayout.css" />
    <style>
        h1 {
            text-align: center;
        }
        .search{
            margin:auto;
            width:300px;
            position: fixed;
            z-index: 1;
            padding-top: 20px;
        }
        .main {
            margin-left: 300px;
        }
        .filter{
            background-color: #cccccc;
            border-radius: 10px;
            border: none;
        }
        .s {
            margin: 5px;
            border-bottom: solid;
            border-top: solid;
            border-color: #cccccc;
            padding: 5px;
        }
        .location-dropdown{
            cursor: pointer;
        }
        .container-dropdown{
            cursor: pointer;
        }
        .location-container {
            display: none;
            padding-left: 6px;
        }
        .container-container {
            display: none;
            padding-left: 10px;
        }
        .active{
            
        }
        
        .more{
            display:none;
            overflow:hidden;

        }
        thead{
            display: none;
        }
        table{
            border: none;
        }
        tr {
            display: block;
            border-radius: 15px;
            width: 95%; /* was 75%, TODO restore*/
            margin: auto;
        }
        .expandable {
            
            background-color: #e1e1e1;
            cursor: pointer;
            margin-top: 5px;
        }
        .expandable:hover{
            background-color: #cccccc;
        }
        .moreInformation {
            display: none;
            background-color: #f0f0f0;
            border: solid;
            border-color: #cccccc;
            border-width: 3px;
            border-top: none;
            border-top-left-radius: 0px;
            border-top-right-radius: 0px;
            width: 90%; /* was 72%, TODO restore*/
        }
        td{
            display: inline-block;
            padding: 5px;
            margin: auto;
            font-weight:400;
            vertical-align: middle;
            color: #101010;
        }
        td::before{
            float: left;
            font-size: .8em;
            color: #696969;
            font-weight: bold;
            padding: 5px;
            margin-right: 5px;
            vertical-align: middle;
        }
        .a:nth-child(1)::before{
            content: "CAS Number:";
        }
        .a:nth-child(2)::before {
            content: "Chemical Name:";
        }
        .a:nth-child(3)::before{
            content: "Hazard ID:";
        }
        .a:nth-child(4)::before{
            content: "# Locations:";
        }
        .a:nth-child(5)::before {
            content: "units:";
        }
        .a:nth-child(6)::before {
            content: "size:";
        }
        .a:nth-child(7)::before {
            content: "room #:";
        }
        .a:nth-last-child(2){
            float: right;
        }
        .a:nth-last-child(1){
            float: right;
        } 
        
    </style>
</head>


<h1>Search</h1>

<div class="search">
    <form>
        <input type="submit" value="Filter" class="filter" />
        <div class="s">
            CAS number: <input type="text" asp-for="searchCAS" />
        </div>
        <div class="s">
            Name: <input type="text" asp-for="searchString" />
        </div>
        <div class="s">
            Email: <input type="text" asp-for="searchEmail" />
        </div>
        <div class="s location-dropdown"> Location </div>
        <div class="location-container">
            <!-- Location: <input type="text" asp-for="searchLocation" />
        Number of locations: <input type="text" asp-for="searchNumLocation" />
            -->
            <p> one </p>
            <p> two </p>
            <p> three </p>
        </div>
        <div class="s container-dropdown"> Container </div>
        <div class="container-container">
            <p> Container Size</p>
            Units: <input type="checkbox" />
        </div>
        <div class="default">
            <input type="submit" value="temp submit extra filters" />
        </div>
    </form>
    

</div>

<table class="table">
    <thead>
        <!-- not using table head I think
        <tr>
            <th>
                Html.DisplayNameFor(Model => Model.Chemical[0].CasNumber)
            </th>
            <th>
                Html.DisplayNameFor(model => model.Chemical[0].ChemName)
            </th>
            <th>
                Html.DisplayNameFor(model => model.Chemical[0].HazardId)
            </th>
            <th>
                # of Locations
            </th>
            <th></th>
        </tr> -->
    </thead>
    <tbody>
        @if (Model.Container.Count() > 0) 
        {
            @if (!Model.textEntered())
            {
                <p>Enter Text</p>
            }
<div class="main">
    <table class="table">
        <thead>
            <tr>
                <th>
                    @Html.DisplayNameFor(Model => Model.Chemical[0].CasNumber)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Chemical[0].ChemName)
                </th>
                <th>
                    # of Locations
                </th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            @if (Model.Chemical.Count() > 0)
            {
                @if (!Model.textEntered())
                {
                    <p>Enter Text</p>
                }

            @foreach (var item in Model.Container)
            {
                <tr class="expandable">
                    <td class="a">
                        @Html.DisplayFor(modelItem => item.ChemId)
                    </td>
                    <td class="a">
                        @{ var chemName = Model.getChem(item).Result.ChemName; }
                        @chemName
                    </td>
                    <td class="a">
                        @{ var hazard = Model.getHazardId(item); }
                        @hazard.ToString()
                    </td>
                    <td class="a">
                        @{  var numLocations = Model.getNumLocations(item); }
                        @numLocations.ToString()
                    </td>
                    <td class="a">
                        @Html.DisplayFor(modelItem => item.Unit)
                    </td>
                    <td class="a">
                        @Html.DisplayFor(modelItem => item.Size)
                    </td>
                    <td class="a">
                        @{ var roomNum = Model.getRoomNum(item);}
                        @roomNum
                    </td>
                    <td class="a">
                        <a asp-page="Admin/Chemicals/Details" asp-route-id="@item.ChemId">Details</a>
                    </td>
                    <td class="a">
                        <a asp-page="Admin/Hazards/Details" asp-route-id="@Model.getHazardId(item)">Safety Data Sheet</a>
                    </td>
                </tr>
                <tr class="moreInformation">
                    <td>
                        More Information
                    </td>
                </tr>
            }
         } else {
            <p>No results found</p>
         }
    </tbody>
</table>

<script>
    var coll = document.getElementsByClassName("expandable");
    var i;

    for (i = 0; i < coll.length; i++) {
        coll[i].addEventListener("click", function () {
            this.classList.toggle("active");
            var content = this.nextElementSibling;
            if (content.style.display === "block") {
                content.style.display = "none";
                this.style.backgroundColor = "rgb(225,225,225)";
            } else {
                content.style.display = "block";
                this.style.backgroundColor = "rgb(204,204,204)";
            }
        });
    }
</script>

<script>
    /* Loop through all dropdown buttons to toggle between hiding and showing its dropdown content - 
     * This allows the user to have multiple dropdowns without any conflict */
    var dropdown = document.getElementsByClassName("location-dropdown");
    var i;

    for (i = 0; i < dropdown.length; i++) {
        dropdown[i].addEventListener("click", function () {
            this.classList.toggle("active");
            var dropdownContent = this.nextElementSibling;
            if (dropdownContent.style.display === "block") {
                dropdownContent.style.display = "none";
            } else {
                dropdownContent.style.display = "block";
            }
        });
    }
</script>

<script>
    /* Loop through all dropdown buttons to toggle between hiding and showing its dropdown content -
     * This allows the user to have multiple dropdowns without any conflict */
    var dropdown = document.getElementsByClassName("container-dropdown");
    var i;

    for (i = 0; i < dropdown.length; i++) {
        dropdown[i].addEventListener("click", function () {
            this.classList.toggle("active");
            var dropdownContent = this.nextElementSibling;
            if (dropdownContent.style.display === "block") {
                dropdownContent.style.display = "none";
            } else {
                dropdownContent.style.display = "block";
            }
        });
    }
</script>
