@page
@model ChemStoreWebApp.Pages.SearchModel

@{
    ViewData["Title"] = "Search";
}

<h1>Search</h1>

<form>
    <p>
        Email: <input type="text" asp-for="searchEmail" />
    </p>
    <p>
        CAS number: <input type="text" asp-for="searchCAS" />
    </p>
    <p>
        Name: <input type="text" asp-for="searchString" />
    </p>
    <p>
        Location: <input type="text" asp-for="searchLocation" />
    </p>
    <p>
        Number of locations: <input type="text" asp-for="searchNumLocation" />
    </p>
    <p>
        Container size: <input type="text" asp-for="searchSize" />
        Units: <input type="checkbox" />
    </p>
    <p>
        <input type="submit" value="Filter" />
    </p>
</form>

<form>
    @*Test code for Quick Reference Inventory*@
    @*Model.chem.count might give total number of chems but might not screen for uniqueness will need to check that.*@
    int x = Model.Chemical.Count();
    <p>
        Number of Unique Chemicals: <var>x</var>
    </p>
    @*Where is the volumn of the chems kept? is that in the database? or is it a property*@
    @*double v = Volumn of the chems (grab all add then put result here)*@
    @*v = v + Vol of the next chem*@
    <p>
        Volume of all Chemicals for Current Filters: <var>v</var>
    </p>
    @*Where ever the units are displayed will run a check and if the vol is over the threshold for the next unit up will set to new num and unit.*@

    @*END OF TEST CODE*@
</form>

<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(Model => Model.Chemical[0].CasNumber)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Chemical[0].ChemName)
            </th>
            <th>
                # of Locations
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @if (Model.Chemical.Count() > 0)
        {
            @if (!Model.textEntered())
            {
                <p>Enter Text</p>
            }
            @foreach (var item in Model.Chemical)
            {
                @*Item Results Per Page layout*@
                @*If this table is the results of the search does everything display at once?*@
                @*How would you get there to be only 25 rows per page or even do multiple pages?*@
                <tr>
                    <td>
                        @Html.DisplayFor(modelItem => item.CasNumber)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.ChemName)
                    </td>
                    <td>
                        @{ var numLocations = Model.getNumLocations(item); }
                        @numLocations
                    </td>
                    <td>
                        <a asp-page="Admin/Chemicals/Details" asp-route-id="@item.CasNumber">Details</a>
                    </td>
                    <td>
                        <a asp-page="Admin/Hazards/Details" asp-route-id="@item.HazardId">Safety Data Sheet</a>
                    </td>
                </tr>
            }
        }
        else
        {
            <p>No results found</p>
        }
    </tbody>
</table>
